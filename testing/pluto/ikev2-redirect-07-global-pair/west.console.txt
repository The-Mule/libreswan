/testing/guestbin/swan-prep --46 --nokey
Creating empty NSS database
west #
 ../../guestbin/ip.sh address show eth0 | grep global | sort
    inet 192.0.1.254/24 scope global eth0
    inet6 2001:db8:0:1::254/64 scope global
west #
 ipsec start
Redirecting to: [initsystem]
west #
 ../../guestbin/wait-until-pluto-started
west #
 ipsec whack --impair revival
west #
 ipsec add west-cuckoo
"west-cuckoo": added IKEv2 connection
west #
 ipsec add west-cuckold
"west-cuckold": added IKEv2 connection
west #
 echo "initdone"
initdone
west #
 ipsec whack --impair revival
west #
 # establish the IKE SA, and first connection
west #
 ipsec auto --up west-cuckoo
"west-cuckoo" #1: initiating IKEv2 connection to 192.1.2.23 using UDP
"west-cuckoo" #1: sent IKE_SA_INIT request to 192.1.2.23:UDP/500
"west-cuckoo" #1: IKE_SA_INIT response redirects to new gateway 192.1.3.33
"west-cuckoo" #1: scheduling redirect 1 to 192.1.3.33
"west-cuckoo" #1: IMPAIR: redirect: skip scheduling redirect event
"west-cuckoo" #1: deleting IKE SA (sent IKE_SA_INIT request)
west #
 ipsec whack --impair trigger_revival:1
"west-cuckoo": IMPAIR: dispatch REVIVAL; redirect attempt 1 from 192.1.2.23 to 192.1.3.33; delete IKE SA
"west-cuckoo" #2: initiating IKEv2 connection to 192.1.3.33 using UDP
"west-cuckoo" #2: sent IKE_SA_INIT request to 192.1.3.33:UDP/500
"west-cuckoo" #2: processed IKE_SA_INIT response from 192.1.3.33:UDP/500 {cipher=AES_GCM_16_256 integ=n/a prf=HMAC_SHA2_512 group=DH19}, initiating IKE_AUTH
"west-cuckoo" #2: sent IKE_AUTH request to 192.1.3.33:UDP/500 with shared-key-mac and FQDN '@west'; Child SA #3 {ESP <0xESPESP}
"west-cuckoo" #2: processing IKE_AUTH response from 192.1.3.33:UDP/500 containing SK{IDr,AUTH,SA,TSi,TSr}
"west-cuckoo" #2: initiator established IKE SA; authenticated peer using authby=secret and FQDN '@east'
"west-cuckoo" #3: initiator established Child SA using #2; IPsec tunnel [192.0.3.0/24===192.0.2.0/24] {ESP/ESN=>0xESPESP <0xESPESP xfrm=AES_GCM_16_256-NONE DPD=passive}
west #
 # initiate the second connection; will create its own IKE SA and then
west #
 # redirect.
west #
 ipsec auto --up west-cuckold
"west-cuckold" #4: initiating IKEv2 connection to 192.1.2.23 using UDP
"west-cuckold" #4: sent IKE_SA_INIT request to 192.1.2.23:UDP/500
"west-cuckold" #4: IKE_SA_INIT response redirects to new gateway 192.1.3.33
"west-cuckold" #4: scheduling redirect 1 to 192.1.3.33
"west-cuckold" #4: IMPAIR: redirect: skip scheduling redirect event
"west-cuckold" #4: deleting IKE SA (sent IKE_SA_INIT request)
west #
 # re-initiate the second connection; it will now match the first IKE
west #
 # SA and use it.
west #
 ipsec whack --impair trigger_revival:2
"west-cuckold": IMPAIR: dispatch REVIVAL; redirect attempt 1 from 192.1.2.23 to 192.1.3.33; delete IKE SA
"west-cuckold" #5: initiating Child SA using IKE SA #2
"west-cuckold" #5: sent CREATE_CHILD_SA request to create Child SA using IKE SA #2 {ESP <0xESPESP}
"west-cuckold" #5: initiator established Child SA using #2; IPsec tunnel [192.0.3.0/24===192.0.20.0/24] {ESP/ESN=>0xESPESP <0xESPESP xfrm=AES_GCM_16_256-NONE-DH19 DPD=passive}
west #
 ipsec trafficstatus
#5: "west-cuckold", type=ESP, add_time=1234567890, inBytes=0, outBytes=0, maxBytes=2^63B, id='@east'
#3: "west-cuckoo", type=ESP, add_time=1234567890, inBytes=0, outBytes=0, maxBytes=2^63B, id='@east'
west #
