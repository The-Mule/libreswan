<varlistentry>
  <term>
    <option>iptfs</option>
  </term>
  <listitem>
    <para>
      Enable "Aggregation and Fragmentation Mode for Encapsulating
      Security Payload (ESP) and its use for IP Traffic Flow Security
      (IP-TFS) as defined in RFC 9347.  Currently, this is only
      supported for the Linux XFRM stack and will likely be merged
      into Linux 6.7 or 6.8. Valid options are <option>no</option>
      (the default) or <option>yes</option>.  IP-TFS allow the kernel
      to combine multiple small packets into one ESP packet, which
      should cause a performance gain when many small packets (eg
      iperf packets) are sent.  It also allows the kernel to fragment
      the outgoing packet stream so that the ESP packets have a fixed
      size that can be set manually or fit the path MTU.  This should
      avoid common MTU issues with IPsec.  IP-TFS can only be used
      with tunnel mode and ESP.  It cannot be combined with
      <option>type=transport</option>, <option>phase2=ah</option>,
      <option>compress=yes</option> or <option>tfc=yes</option>.  A
      number of IP-TFS options can be tuned.
    </para>
  </listitem>
</varlistentry>
<varlistentry>
  <term>
    <option>iptfs-fragmentation={yes,no}</option>
  </term>
  <listitem>
    <para>
      Whether or not to fragment IP-TFS.
    </para>
    <para>
      On <application>Linux</application> and
      <option>iptfs-fragmentation=no</option>, this passes
      <option>XFRMA_IPTFS_DONT_FRAG</option> to the kernel.  (Unclear
      to at least one author if this means regular ICMP Dont Fragment
      sending, or whether it stops IP-TFS from fragmenting).
    </para>
    <para>
      Default is <option>iptfs-fragmentation=yes</option>
    </para>
  </listitem>
</varlistentry>
<varlistentry>
  <term><option>iptfs-max-queue-size</option></term>
  <listitem>
    <para>
      The default IP-TFS max output queue size in octets. The output
      queue is where received packets destined for output over an
      IP-TFS tunnel are stored prior to being output in
      aggregated/fragmented form over the IP-TFS tunnel.
    </para>
    <para>
      Default 1000000.
    </para>
  </listitem>
</varlistentry>
<varlistentry>
  <term><option>iptfs-drop-time</option></term>
  <listitem>
    <para>
      The default IP-TFS drop time in microseconds. The drop time is
      the amount of time before a missing out-of-order IP-TFS tunnel
      packet is considered lost. See also the reorder window.
    </para>
    <para>
      Default is 1s (1000000)
    </para>
  </listitem>
</varlistentry>
<varlistentry>
  <term><option>iptfs-in-delay</option></term>
  <listitem>
    <para>
      The default IP-TFS initial output delay in microseconds. The
      initial output delay is the amount of time prior to servicing
      the output queue after queueing the first packet on said
      queue.
    </para>
    <para>
      Default is 0.
    </para>
  </listitem>
</varlistentry>
<varlistentry>
  <term><option>iptfs-reorder-window</option></term>
  <listitem>
    <para>
      The default IP-TFS reorder window size. The reorder window size
      dictates the maximum number of IP-TFS tunnel packets in a
      sequence that may arrive out of order.
    </para>
    <para>
      Default 3.
    </para>
  </listitem>
</varlistentry>
